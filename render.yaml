# render.yaml â€” PittState-Connect full deployment configuration

services:
  - type: web
    name: pittstate-connect
    env: python
    plan: starter
    buildCommand: "pip install -r requirements.txt"
    startCommand: "gunicorn app_pro:app --workers=3 --threads=2 --timeout=120 --preload"
    branch: main
    autoDeploy: true
    healthCheckPath: /healthz
    envVars:
      - key: CONFIG_CLASS
        value: config.settings.ProductionConfig
      - key: FLASK_ENV
        value: production
      - key: APP_ENV
        value: production
      - key: SECRET_KEY
        generateValue: true
      - key: TZ
        value: America/Chicago
      - key: DATABASE_URL
        fromDatabase:
          name: pittstate-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: pittstate-redis
          property: connectionString
      - key: SENDGRID_API_KEY
        sync: false
      - key: MAIL_DEFAULT_SENDER
        value: noreply@pittstateconnect.com
      - key: OPENAI_API_KEY
        sync: false
      - key: CORS_ORIGINS
        value: https://pittstate-connect.onrender.com
      - key: LOG_LEVEL
        value: INFO
      - key: PRINT_ROUTES_ON_BOOT
        value: "0"

  - type: worker
    name: pittstate-worker
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "python worker.py"
    plan: starter
    envVars:
      - key: CONFIG_CLASS
        value: config.settings.ProductionConfig
      - key: DATABASE_URL
        fromDatabase:
          name: pittstate-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: pittstate-redis
          property: connectionString
      - key: TZ
        value: America/Chicago
      - key: OPENAI_API_KEY
        sync: false
      - key: SENDGRID_API_KEY
        sync: false
      - key: SECRET_KEY
        sync: false

databases:
  - name: pittstate-postgres
    plan: starter

redis:
  - name: pittstate-redis
    plan: starter
    maxmemoryPolicy: allkeys-lru

jobs:
  - name: nightly-analytics-refresh
    type: cron
    schedule: "0 2 * * *"
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "python -m blueprints.analytics.tasks refresh_insight_cache"
    envVars:
      - key: CONFIG_CLASS
        value: config.settings.ProductionConfig
      - key: DATABASE_URL
        fromDatabase:
          name: pittstate-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: pittstate-redis
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: TZ
        value: America/Chicago
