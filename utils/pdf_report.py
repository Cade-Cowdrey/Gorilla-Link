from reportlab.lib import colors
from reportlab.lib.pagesizes import letter
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
from datetime import datetime
from models import User, Department, UserAnalytics
from app_pro import db
import random

def generate_overview_pdf(buffer):
    """Generates a PSU-branded PDF analytics report."""
    doc = SimpleDocTemplate(buffer, pagesize=letter)
    elements = []
    styles = getSampleStyleSheet()

    # PSU Styles
    title_style = ParagraphStyle("Title", fontSize=20, textColor=colors.HexColor("#C8102E"), alignment=1, spaceAfter=20)
    section_style = ParagraphStyle("Section", fontSize=14, textColor=colors.HexColor("#C8102E"), spaceBefore=15)
    body_style = ParagraphStyle("Body", fontSize=11, leading=15)

    # Title
    elements.append(Paragraph("PittState-Connect Overview Summary Report", title_style))
    elements.append(Paragraph(f"As of {datetime.utcnow().strftime('%B %d, %Y')}", body_style))
    elements.append(Spacer(1, 12))

    # Overview Stats
    total_users = User.query.count()
    total_departments = Department.query.count()
    active_users = UserAnalytics.query.filter(
        UserAnalytics.last_active >= datetime.utcnow() - datetime.timedelta(days=7)
    ).count() if hasattr(datetime, 'timedelta') else 0
    avg_engagement = db.session.query(db.func.avg(UserAnalytics.engagement_score)).scalar() or 0

    elements.append(Paragraph("General Overview", section_style))
    data = [
        ["Total Users", total_users],
        ["Active This Week", active_users],
        ["Total Departments", total_departments],
        ["Average Engagement", f"{avg_engagement:.2f}"],
    ]
    table = Table(data, hAlign='LEFT', colWidths=[200, 200])
    table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.HexColor("#FFC72C")),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.black),
        ('ALIGN', (0, 0), (-1, -1), 'CENTER'),
        ('GRID', (0, 0), (-1, -1), 0.5, colors.grey)
    ]))
    elements.append(table)
    elements.append(Spacer(1, 18))

    # Top Departments
    elements.append(Paragraph("Top Performing Departments", section_style))
    depts = Department.query.all()
    top_departments = []
    for d in depts:
        avg_score = (
            db.session.query(db.func.avg(UserAnalytics.engagement_score))
            .join(User)
            .filter(User.department_id == d.id)
            .scalar() or 0
        )
        top_departments.append((d.name, avg_score))
    top_departments.sort(key=lambda x: x[1], reverse=True)
    top_departments = top_departments[:5]
    dept_data = [["Department", "Avg Engagement"]] + [[d[0], f"{d[1]:.2f}"] for d in top_departments]
    dept_table = Table(dept_data, hAlign='LEFT', colWidths=[200, 200])
    dept_table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.HexColor("#C8102E")),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.white),
        ('GRID', (0, 0), (-1, -1), 0.5, colors.grey)
    ]))
    elements.append(dept_table)

    # Footer
    elements.append(Spacer(1, 20))
    elements.append(Paragraph(
        "Generated by PittState-Connect | Office of Digital Analytics",
        ParagraphStyle("Footer", fontSize=9, alignment=1, textColor=colors.grey)
    ))

    doc.build(elements)
    return buffer
